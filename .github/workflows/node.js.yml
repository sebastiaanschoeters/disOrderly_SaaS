# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  process.env.CI : false
  REACT_APP_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  REACT_APP_SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}


  run: |
    touch .env
    echo REACT_APP_VERCEL_URL=${{ secrets.SUPABASE_URL }} >> .env
    echo REACT_APP_VERCEL_KEY=${{ secrets.SUPABASE_KEY }} >> .env
    cat .env

on:
  push:
    branches: [ "main", "Sebastiaan-dev-branch" ]
  pull_request:
    branches: [ "main", "Sebastiaan-dev-branch" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: CI=false npm run build --if-present

  cypress:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Start the application
        run: npm start &
        env:
          CI: true

      - name: Wait for the application to be ready
        uses: jakejarvis/wait-for-netlify-action@v1
        with:
          url: http://localhost:3000
          timeout: 60

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          wait-on: http://localhost:3000
          build: npm run build


  #Deploy-Preview:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Install Vercel CLI
  #      run: npm install --global vercel@latest
  #    - name: Pull Vercel Environment Information
  #      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #    - name: Build Project Artifacts
  #      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
  #    - name: Deploy Project Artifacts to Vercel
  #      run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  
